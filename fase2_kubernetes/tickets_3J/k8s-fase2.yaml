apiVersion: v1
kind: Namespace
metadata:
  name: tickets3j-namespace-fase2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: tickets3j-namespace-fase2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: tickets3j-namespace-fase2
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: tickets3j-namespace-fase2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      nodeSelector:
        role: single-node
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_DB
              value: "tickets3J"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "Avila16"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: tickets3j-namespace-fase2
spec:
  selector:
    app: web
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: tickets3j-namespace-fase2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      nodeSelector:
        role: single-node
      initContainers:
        - name: makemigrations-and-migrate
          image: juanavila16/tickets3j-fase2:v1
          command:
            [
              "bash",
              "-c",
              "python manage.py makemigrations && python manage.py migrate"
            ]
          env:
            - name: DB_HOST
              value: postgres
            - name: DB_NAME
              value: tickets3J
            - name: DB_USER
              value: postgres
            - name: DB_PASSWORD
              value: Avila16
      containers:
        - name: web
          image: juanavila16/tickets3j-fase2:v1
          ports:
            - containerPort: 8000
          env:
            - name: DB_HOST
              value: postgres
            - name: DB_NAME
              value: tickets3J
            - name: DB_USER
              value: postgres
            - name: DB_PASSWORD
              value: Avila16
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: tickets3j-namespace-fase2
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: tickets3j-namespace-fase2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      nodeSelector:
        role: single-node
      containers:
        - name: nginx
          image: juanavila16/nginx-tickets3j:latest
          ports:
            - containerPort: 80
